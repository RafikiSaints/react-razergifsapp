{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","className","placeholder","type","onChange","target","value","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_large","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCkCEQ,EAtCW,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAC7BR,GAAe,SAAAK,GAAC,OAAGH,GAAH,mBAAiBG,OAC7BF,EAAc,MAOlB,SACI,uBACAM,UAAU,uCACNC,YAAY,cACZC,KAAK,OAELC,SArBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOC,a,+BCchBC,EAnBK,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GAEnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,gBAAgBZ,QAXtB,kBAgBXM,GAhBW,4CAAF,sDCAPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKT,UAAU,yCAAf,UACI,qBAAKuB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCwBDM,EA1BQ,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAGrB,ECHwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAE/BsB,KAAM,GACNY,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAjBAC,qBAAU,WACNvB,EAASC,GACRvB,MAAK,SAAA8C,GAGEF,EAAS,CACLd,KAAMgB,EACNJ,SAAQ,SAQtB,CAACnB,IAEIoB,EDvBwBI,CAAaxB,GAAhCa,EAAZ,EAAON,KAAaY,EAApB,EAAoBA,QAGpB,OACI,qCACA,6BAAKnB,IAEAmB,GAAW,oBAAI1B,UAAU,oCAAd,sBAChB,qBAAKA,UAAU,cAAf,SAESoB,EAAOJ,KAAI,SAAAC,GAAG,OAEP,cAAC,EAAD,eAEGA,GADEA,EAAIC,aEdpBc,EAAe,WAExB,MAAoCxC,mBAAS,CAAC,mBAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAGA,OACI,qCACI,oBAAIS,UAAU,oCAAd,wBACA,cAAC,EAAD,CAAaT,cAAeA,IAC5B,uBAEJ,6BAEQ0C,EAAWjB,KAAI,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,Y,MCd7B2B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAE1BxD,M","file":"static/js/main.7ea3a7bc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')    \r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2) {\r\n        setCategories (e=>[inputValue,...e]);\r\n            setInputValue('');\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            className='animate__animated animate__heartBeat' \r\n                placeholder='Buscar Gifs'\r\n                type=\"text\"\r\n                // value={inputValue}\r\n                onChange= {handleInputValue}\r\n            ></input>\r\n        </form>\r\n    )\r\n\r\n\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\nexport default (AddCategory);\r\n","\r\n\r\nexport const getGifs =async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=EYmraBy1Zuz6zF4JtwSNJY0SAdXSachy`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifts = data.map(img=>{\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_large.url\r\n\r\n        }\r\n\r\n    })\r\n    return gifts;\r\n}\r\n\r\nexport default getGifs;\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>        \r\n        <h3>{category}</h3>\r\n\r\n            {loading && <h2 className='animate__animated animate__wobble'>Cargando</h2>}\r\n        <div className='card-grid  '>\r\n            \r\n                {images.map(img=>(\r\n                        \r\n                        <GifGridItem\r\n                        key={img.id}\r\n                       {...img}  />\r\n\r\n                ))}\r\n\r\n           \r\n            </div>\r\n            </>\r\n    )\r\n}\r\nexport default GifGrid;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport getGifs from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category)=> {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n        \r\n    })  \r\n\r\n    useEffect(()=>{\r\n        getGifs (category)\r\n        .then(imgs=>{\r\n            \r\n            \r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n\r\n                })\r\n            \r\n\r\n\r\n        }\r\n            )\r\n    },[category])\r\n\r\n    return state;\r\n\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['The Grand Tour']);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2 className='animate__animated animate__wobble'>Razer Gifs</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category => (\r\n                    // return <li key={category}>{category}</li>\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                        />\r\n\r\n                )\r\n           \r\n                )}\r\n        </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\nreportWebVitals();\n\n"],"sourceRoot":""}